# -*- coding: utf-8 -*-

# –ò–º–µ–µ—Ç—Å—è —Ñ–∞–π–ª events.txt –≤–∏–¥–∞:
#
# [2018-05-17 01:55:52.665804] NOK
# [2018-05-17 01:56:23.665804] OK
# [2018-05-17 01:56:55.665804] OK
# [2018-05-17 01:57:16.665804] NOK
# [2018-05-17 01:57:58.665804] OK
# ...
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª
# –∏ –≤—ã–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ —Å–æ–±—ã—Ç–∏–π NOK –∑–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ
#
# [2018-05-17 01:57] 1234
# [2018-05-17 01:58] 4321
# ...
#
# –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
#
# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–æ–¥—É: –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ - –¥–µ–ª–∞—Ç—å —Å—Ä–∞–∑—É –Ω–∞ –∫–ª–∞—Å—Å–∞—Ö.
# –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ "–®–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥"
#   —Å–º https://refactoring.guru/ru/design-patterns/template-method
#   –∏ https://gitlab.skillbox.ru/vadim_shandrinov/python_base_snippets/snippets/4


from collections import defaultdict


class Events:

    def __init__(self, filename):
        self.filename = filename
        self.val_vocabulary = defaultdict(int)

    # TODO: üëç –∑–∞ –∑–∞–º–µ–Ω—É –∏–º–µ–Ω–∏ –º–µ—Ç–æ–¥–∞.
    def collect_data(self):
        with open(self.filename, mode='r') as file:
            for line in file:
                self.collect_for_line(line=line,)

    def collect_for_line(self, line):
        val1, val2, key = line.split()
        if 'NOK' in line:
            val = val1[1:] + ' ' + val2[:5]
            self.adjustment(val)

    # TODO: adjustment - —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞.
    #  –ù–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≥–ª–∞–≥–æ–∞–º–∏/—Å–∫–∞–∑—É–µ–º—ã–º–∏. –ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö - —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏.
    def adjustment(self, val):
        adjustment_val = '[' + val[:] + ']'
        # TODO: —Å—Ç—Ä–æ–∫–∞ –Ω–∏–∂–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤ –∫–∞–∂–¥–æ–º –∫–ª–∞—Å—Å-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–µ. –í –∫–∞–∂–¥–æ–º!
        #  –ö–∞–∫ –º–æ–∂–Ω–æ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥, —á—Ç–æ–±—ã —Å—Ç—Ä–æ–∫–∞ –Ω–∏–∂–µ –ø–µ—Ä–µ–∫–æ—á–µ–≤–∞–ª–∞ –≤ collect_for_line?
        self.val_vocabulary[adjustment_val] += 1
    # TODO: –º–µ—Ç–æ–¥ –≤—ã—à–µ –ø–æ —Ñ–∞–∫—Ç—É, –ø–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É => parse_line. –ö–∞–∫ –≤–∞–º —Ç–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞–∑–≤–∞–Ω–∏—è?

    def dictionary_output(self, file_name):
        with open(file_name, 'w', encoding='utf-8') as file:
            for key, quantity in self.val_vocabulary.items():
                file.write(f'{key} {quantity}\n')


filename = 'events.txt'

events = Events(filename)
events.collect_data()
events.dictionary_output('result-file.txt')


# –ü–æ—Å–ª–µ –∑–∞—á–µ—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ —ç—Ç–∞–ø–∞ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É —Å–æ–±—ã—Ç–∏–π
#  - –ø–æ —á–∞—Å–∞–º
#  - –ø–æ –º–µ—Å—è—Ü—É
#  - –ø–æ –≥–æ–¥—É

class Events1(Events):

    def adjustment(self, val):
        adjustment_val = '[' + val[:-6] + ']'
        self.val_vocabulary[adjustment_val] += 1


events_1 = Events1(filename)
events_1.collect_data()
events_1.dictionary_output('result-file.txt')


class Events2(Events):

    def adjustment(self, val):
        adjustment_val = '[' + val[:-9] + ']'
        self.val_vocabulary[adjustment_val] += 1


events_2 = Events2(filename)
events_2.collect_data()
events_2.dictionary_output('result-file.txt')


class Events3(Events):

    def adjustment(self, val):
        adjustment_val = '[' + val[:-12] + ']'
        self.val_vocabulary[adjustment_val] += 1


events_3 = Events3(filename)
events_3.collect_data()
events_3.dictionary_output('result-file.txt')
