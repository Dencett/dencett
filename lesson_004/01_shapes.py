# -*- coding: utf-8 -*-

import simple_draw as sd


# –ß–∞—Å—Ç—å 1.
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ–∏–≥—É—Ä:
# - —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
# - –∫–≤–∞–¥—Ä–∞—Ç–∞
# - –ø—è—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫–∞
# - —à–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫–∞
# –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:
# - —Ç–æ—á–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
# - —É–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞
# - –¥–ª–∏–Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ã
#
# –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏:
#   # –±—É–¥–µ–º —Ä–∏—Å–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –≤–µ–∫—Ç–æ—Ä–æ–≤, –∫–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π - –∏–∑ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
#   —Ç–µ–∫—É—â–∞—è_—Ç–æ—á–∫–∞ = –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞
#   –¥–ª—è —É–≥–æ–ª_–Ω–∞–∫–ª–æ–Ω–∞ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç 0 –¥–æ 360 —Å —à–∞–≥–æ–º XXX
#      # XXX –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∏–≥—É—Ä—ã
#      —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–µ–∫—Ç–æ—Ä –∏–∑ —Ç–µ–∫—É—â–∞—è_—Ç–æ—á–∫–∞ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã —Å –Ω–∞–∫–ª–æ–Ω–æ–º –≤ —É–≥–æ–ª_–Ω–∞–∫–ª–æ–Ω–∞
#      —Ä–∏—Å—É–µ–º –≤–µ–∫—Ç–æ—Ä
#      —Ç–µ–∫—É—â–∞—è_—Ç–æ—á–∫–∞ = –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–µ –≤–µ–∫—Ç–æ—Ä–∞
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏-–ø–∞—Å—Ç—ã - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –î–∞–∂–µ —Ç–µ–º –∫—Ç–æ —É–∂–µ –∑–Ω–∞–µ—Ç –ø—Ä–æ –µ—ë –ø–∞–≥—É–±–Ω–æ—Å—Ç—å. –î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.
# –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–ø–∏–ø–∞—Å—Ç–∞:
#   - –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø–∏—Å–∞–ª–∏,
#   - –∫–æ–ø–∏–ø–∞—Å—Ç–∏–º –µ—ë, –º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—É—Ç—å –ø–æ–¥–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥,
#   - –∫–æ–ø–∏–ø–∞—Å—Ç–∏–º –µ—ë, –º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—É—Ç—å –ø–æ–¥–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥,
#   - –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
# –í –∏—Ç–æ–≥–µ –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å—Å—è –ü–û–ß–¢–ò –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∫–æ–¥ –≤ –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

# –ü—Ä–∏–≥–æ–¥—è—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏
# sd.get_point()
# sd.get_vector()
# sd.line()
# –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ—à–µ–Ω–∏—è —Å–º lesson_004/results/exercise_01_shapes.jpg


def draw_triangle(point, length, angle_incline):
    current_point = point
    angle0 = angle_incline
    for angle_change in range(0, 360, 120):
        angle = angle0 + angle_change
        v1 = sd.get_vector(start_point=current_point, angle=angle, length=length, width=4)
        v1.draw(color=color)
        current_point = v1.end_point


def draw_quadrangle(point, length, angle_incline):
    current_point = point
    angle0 = angle_incline
    for angle_change in range(0, 360, 90):
        angle = angle0 + angle_change
        v1 = sd.get_vector(start_point=current_point, angle=angle, length=length, width=4)
        v1.draw(color=color)
        current_point = v1.end_point


def draw_pentagon(point, length, angle_incline):
    current_point = point
    angle0 = angle_incline
    for angle_change in range(0, 360, 72):
        angle = angle0 + angle_change
        v1 = sd.get_vector(start_point=current_point, angle=angle, length=length, width=4)
        v1.draw(color=color)
        current_point = v1.end_point


def draw_hexagon(point, length, angle_incline):
    current_point = point
    angle0 = angle_incline
    for angle_change in range(0, 360, 60):
        angle = angle0 + angle_change
        v1 = sd.get_vector(start_point=current_point, angle=angle, length=length, width=4)
        v1.draw(color=color)
        current_point = v1.end_point


color = sd.COLOR_ORANGE

point = sd.get_point(100, 100)
first_angle = 0
draw_quadrangle(point=point, length=120, angle_incline=first_angle)

point = sd.get_point(400, 100)
first_angle = 0
draw_triangle(point=point, length=150, angle_incline=first_angle)

point = sd.get_point(120, 400)
first_angle = 0
draw_pentagon(point=point, length=100, angle_incline=first_angle)

point = sd.get_point(420, 400)
first_angle = 0
draw_hexagon(point=point, length=90, angle_incline=first_angle)

# –∑–∞—á—ë—Ç –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏


# –ß–∞—Å—Ç—å 1-–±–∏—Å.
# –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–∫–∏–Ω—É—Ç—å –æ–±—å–µ–º —Ä–∞–±–æ—Ç—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –∫–æ–¥.
# –°–∫–∞–∂–µ–º, —Å–≤—è–∑—ã–≤–∞—Ç—å —Ç–æ—á–∫–∏ –Ω–µ –ª–∏–Ω–∏—è–º–∏, –∞ –¥—É–≥–∞–º–∏. –ò–ª–∏ –¥–≤–æ–π–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏. –ò–ª–∏ —Ä–∏—Å–æ–≤–∞—Ç—å –∫—Ä—É–≥–∏ –≤ —É–≥–ª–æ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö. –ò–ª–∏...
# –ê –µ—Å–ª–∏ —Ç–∞–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –Ω–µ 4, –∞ 44? –ö–æ–¥ –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤—å –æ–±—ä–µ–º —Ä–∞–±–æ—Ç—ã... –∏ –∑–∞–ø–æ–º–Ω–∏ —ç—Ç–æ.

# –ß–∞—Å—Ç—å 2 (–¥–µ–ª–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞—á–µ—Ç–∞ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏)
#
# –ù–∞–¥–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤ –º–µ—Å—Ç–∞—Ö –≥–¥–µ –±—ã–ª–∞ "–Ω–µ–±–æ–ª—å—à–∞—è –ø—Ä–∞–≤–∫–∞".
# –≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "–í—ã–¥–µ–ª–∏—Ç—å –æ–±—â—É—é —á–∞—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é"
# –ü–æ—Ç–æ–º –Ω–∞–¥–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∏–≥—É—Ä - –≤—ã–∑—ã–≤–∞—Ç—å –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤–º–µ—Å—Ç–æ "–ø–æ—á—Ç–∏" –æ–¥–∏–Ω–∞–∫–æ–≤–æ–≥–æ –∫–æ–¥–∞.
#
# –í –∏—Ç–æ–≥–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è:
#   - –æ–¥–Ω–∞ –æ–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
#   - –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞/–∫–≤–∞–¥—Ä–∞—Ç–∞/–µ—Ç—Å –±–µ—Ä—É—Ç 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è –í–´–ó–´–í–ê–Æ–¢ –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é.
#
# –ù–µ –∑–∞–±—É–¥—Ç–µ –≤ —ç—Ç–æ–π –æ–±—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–¥—É–º–∞—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Ä–∞–∑—Ä—ã–≤ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–π/–∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∞—Ö —Ä–∏—Å—É–µ–º–æ–π —Ñ–∏–≥—É—Ä—ã
# (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å. –ø–æ–¥—Å–∫–∞–∑–∫–∞ - –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–Ω–∏—é –æ—Ç –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏)

def figure(point, length, angle_incline, angle_rejection):
    current_point = point
    angle0 = angle_incline
    for angle_change in range(0, 360, angle_rejection):
        angle = angle0 + angle_change
        v1 = sd.get_vector(start_point=current_point, angle=angle, length=length, width=4)
        v1.draw(color=color)
        current_point = v1.end_point


def draw_triangle(point, length, angle_incline):
    figure(point=point, length=length, angle_incline=angle_incline, angle_rejection=120)


def draw_quadrangle(point, length, angle_incline):
    figure(point=point, length=length, angle_incline=angle_incline, angle_rejection=90)


def draw_pentagon(point, length, angle_incline):
    figure(point=point, length=length, angle_incline=angle_incline, angle_rejection=72)


def draw_hexagon(point, length, angle_incline):
    figure(point=point, length=length, angle_incline=angle_incline, angle_rejection=60)


color = sd.COLOR_ORANGE

point = sd.get_point(100, 100)
first_angle = 0
draw_quadrangle(point=point, length=120, angle_incline=first_angle)

point = sd.get_point(400, 100)
first_angle = 0
draw_triangle(point=point, length=150, angle_incline=first_angle)

point = sd.get_point(120, 400)
first_angle = 0
draw_pentagon(point=point, length=100, angle_incline=first_angle)

point = sd.get_point(420, 400)
first_angle = 0
draw_hexagon(point=point, length=90, angle_incline=first_angle)

# –ß–∞—Å—Ç—å 2-–±–∏—Å.
# –ê —Ç–µ–ø–µ—Ä—å - —Å–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ —Ä–∞–±–æ—Ç—ã —á—Ç–æ –±—ã –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥? –í—ã–≥–æ–¥–∞ –Ω–∞ –ª–∏—Ü–æ :)
# –ü–æ—ç—Ç–æ–º—É —Å—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –µ—Å—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø D.R.Y. https://clck.ru/GEsA9
# –ë—É–¥—å—Ç–µ –ª–µ–Ω–∏–≤—ã–º–∏, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–ø–∏-–ø–∞—Å—Ç—É!


sd.pause()

# –∑–∞—á—ë—Ç! üöÄ
